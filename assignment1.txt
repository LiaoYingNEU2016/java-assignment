1. Hiking
 1.1. Rent a ReachNow to drive to mountain rainier on weekends with friends
 1.2. On the way, fill the gas
 1.3. On the way, eat at restaurant for lunch
 1.4. Buy the ticket to get into the park
 1.5. Book a hotel or check in the hotel.

Identify Objects and behaviors:
1.1 Rent a ReachNow to drive to mountain rainier on weekends with friends
Hiker:
 Data: name, phone, address, money, leaseTime
 Behaviors: surfCarRentalWebsite, search, contactTheRenter, rentTheReachNow

Internet
Data : RentalCar, Collection of Websites
Behaviors : searchForCarRentalWebsites 

Car rental website:
Data: URL, products, bankAccount
Behaviors: search, sort, display, compare, placeTheOrder

Rental car:
 Data: rentalPrice, size, off-roadPerformance, leaseTime
 Behaviors: 

CreditCard
Data : Number, name, company, expiry, securityCode
Behavior : 

CreditCardCompany
Behavior : authorizeTransaction

Sequence of invoking behaviors on Objects:
RentCarOnInternet:
Renter hiker,
	Internet internet,
	ElectronicWebsite RentalCar,
	Car ReachNow,
	CreditCard card,
	CreditCarCompany visa
	RentingConfirmation response 


If Internet.isAvailable
Hiker.searchInInternet-> internet, question: Collection of car rental websites
//Hiker.findDesirableWebsiteInFirstPage -> Collection of Websites : website
		pageNumber = 1;
		Loop
			if Hiker.findsNoPages
				break
			end
			Hiker.findDesirableWebsiteInAPage -> internet, question, page Number : website
			RentalCars = website;
			If RentalCars is not empty
				break
			else
				pageNumber = pageNumber + 1
			end
		End
		RentalCars = website
		If RentalCars is not empty or RentalCars!=null
			RentalCars.searchForReachNow -> priceRange, size, off-road performance, lease time : Collection of Cars
			myAssistant = ReachNow
			hiker.rentReachNow -> myAssistant, creditCard, address, RentalCars : RentingConfirmation
			response = rentingConfirmation
		Else
			Hiker.cantrentcar
	Else
		hiker.browseInternetAfterAWhileBack


		
1.2 On the way, fill the gas
Gas station
 Data: gasPrice, typesOfGas, bankAccount
 Behaviors: fill the gas, charge

Gas
 Data: volume, price, type
 Behavior:

Hiker:
 Data: name, model of car, money, types of gas
 Behaviors: searchForTheGasStationOnTheWay, searchForSuitableGas, fillTheGas, pay the fee

CreditCard:
Data: number, name, company, expiry, pin 
Behavior:
		
CreditCardCompany:
Behavior: authorizeTransaction
		
Sequence of invoking behaviors on Objects:
fill the gas
customer hiker,
	GasStation gasStation1,
	Gas gas#,
	CreditCard card,
	CreditCarCompany visa
	transactionConfirmation response 

If gasStation.isAvailable
Hiker.searchForSuitableGas-> type, volume
Gas=gas#
Hiker.payTheFee-> gas#, gasStation, creditCard, name: transactionConfirmation
Response=transactionConfirmation
Else
   Hiker.searchForAnotherGasStation



1.3. On the way, eat at restaurant for lunch
  Hiker: 
   Data: name, money
   behaviors: searchForRestaurantOnTheWay, payTheFee, havelunch
  
  Restaurant
   Data: bankAccount, types of dishes, address
   Behaviors: makeAndProvideFood, charge
  
  Dish
Data: taste, types, size, flavor, price
Behavior:

Sequence of invoking behaviors on Objects:
Eat at restaurant for lunch
customer hiker,
	Restaurant foodie,
	Lunch lch,
  If restaurant.isAvailable
 Hiker.searchForDishes-> types, flavor, size, price->lch
 Lunch=lch
 If lch.isAvailable
Hiker.order->lch, flavor, size, type, price
Hiker.eat->lch
Hiker.pay->lch, creditCard, name, foodie:transactionConfirmation
Response=transactionConfirmation
Else
     Hiker.searchForAnotherLunch
Else
   Hiker.searchForAnotherRestaurant
 



 1.4. Buy the ticket to get into the park
Park:
 Data: address, bankAccount, ticket
   Behavior: charge
 
 Ticket:
  Data: price, type, number
  Behavior:

 Hiker:
   Data: name, money, number
   Behavior: BuyTheticket, getIntoThePark

Sequence of invoking behaviors on Objects:
Buy the ticket to get into the park
customer hiker,
	Park yellowStone,
	Ticket tik,
If park.isAvailable
  Hiker.countTheTotalNumber
  Hiker.buyTheTicket->creditCard, name, yellowStone: transactionConfirmation
  Response=transactionConfirmation
  Hiker.getThetickets
  Hiker.getIntoThePark
Else
  Hiker.searchForAnotherPark
   


 1.5. Book a hotel or check in the hotel.
Hotel: 
Data:address, BankAccount, name, price
Behaviors: provideRooms, charge

Hiker:
Data:name, number, money

Internet
Data:collection of hotel websites
Behavior:searchForHotelWebsites

Website:
Data: URL, bankAccount
Behavior: display, sort, placeTheOrder

Sequence of invoking behaviors on Objects:
Book a hotel or check in
customer hiker,
	Hotel daysInn,
	Internet internet,
Website bookinghotelwebsite,

  If Internet.isAvailable
   Hiker.searchInInternet->internet, question: collection of hotels
   If hiker.findSuitableHotels & hotel.isAvailable
     Hiker.bookHotel->creditCard, name, number, daysInn:reservation & transactionConfirmation
     Response=transactionConfirmation
Hiker.checkIn->hotel.provideRooms
Else
 Hiker.searchForAnotherSuitableHotels
 Else
    Hiker.surfOnTheInternetAfterAWhile



2.Organise a career fair(Suppose you are the organiser)
Career fair: 
Data: time, names of companies, types of jobs, address
Behaviors: provideJobDetails

Organiser:
Data: name, e-mail, phone number
Behaviors: contactWithCompanies, prepareForTheCareerFair, arrangPlaceForCareerFair, releaseInformationAboutCareerFair

Company:
Data: address, contact way, scale, foundation time, number of employees, major domain
Behaviors: recruit, chat with job seekers, read the resumes

Job seekers:
Data: name, phone number, e-mail, resume, education background
Behavior: writeResume, prepareForPresention, chatWithPrincipalOfCompanies, Compare, choose

Place for the career fair
Data: address
Behavior: provideSpaceForChatting

Sequence of invoking behaviors on Objects:
Organise the career fair
Organiser qitarah,
	PlaceForCareerFair pike,
Company A,

Qitarah.contactWithcompanies->time, name, major domain->collection of companies
companyNumber=0;
Loop
 If qitarah.findNoCompanies
  Break
End
Qitarah.findDesirableCompanies->name, types, time
Company = A
If A.agreeToJoinTheCareerFair
 companyNumber=companyNumber+1
Else
 Qitarah.contactAnotherCompany
End
Qitarah.prepareForTheCareerFair
Qitarah.arrangeThePlaceForTheCareerFair
If pike.isAvailable
   Qitarah.applyForPike
   Qitarah.arrangeTime
Else
  Qitarah.findAnotherPlaceForTheCareerFair
If company.isAvailable
  Jobseeker.presentResume
   If company.acceptTheResume
 JobSeeker.chatWithPrincipalOfCompany
If company.giveOffer && jobSeeker.receiveOffer
Break
If company.giveOffer && jobSeeker.refuseOffer
Company.meetNextJobSeeker
Else
 jobSeeker.presentResumeToAnotherCompany
Else
 jobSeeker.haveATryAtAnotherCompany




3.Order Pizza from Pizza Hut

Consumer:
Data: name, address, money, phone number
Behaviors: scanTheMenu, choosePizza, callPizzaHutToOrder, pay, eat

Pizza hut:
Data: pizza types, bankAccount, name
Behavior: sendThePizza, transactionConfirmation

creditCard:
Data: name, company, number, expiry, security code
Behavior:

creditCardCompany:
Behavior: authorizeTransaction

Sequence of invoking behaviors on Objects:
Order pizza
Consumer qitarah,
Pizzahut pizzahut,
Creditcard boa,

If pizzaHut.isAvailable
   Qitarah.scanTheMenu
   Qitarah.choosePizza
     If pizza.isAvailable
      Qitarah.callToOrderAndPayForOrder->pizza, creditCard, address, pizzaHut:transactionConfirmation
       pizzaHut.sendThePizza
       Qitarah.eatPizza
      Else
       Qitarah.chooseAnotherPizza
Else
   Qitarah.chooseAnotherPizzaHut

4. Design a code sharing platform (eg: Github).
User:
Data: name, password, e-mail, phone number, account number
Behaviors: createTheAccount, setThePassword, search, createTheOrganization, uploadTheCode, share, fork, joinTheGroup, discussWithFriends

Designer:
Data: nameOfPlatform, detailsAboutPlatform, detailsAboutHowToShare
Behaviors: analyzeIDE, designCodeSharingPlatform

Platform:
Data:
Behaviors: saveUsername, saveAccount, providePlatformForSharingCode, findFIle

Designer.analyzeIDE
Designer.nameThePlatform
If website.isAvailable
  Platform.inviteUserToSignIn
 If user.haveAccount
  User.signIn
 Else
   User.createNewAccount
Else
  User.surfTheInternetAfterAWhile
End
 User.uploadCode
 Platform.makeCodePublic
 User.saveCode
 platForm.saveCode
 user.searchForCodeFile
   If file.exist
      Platform.display
   Else
      Platform.runError
    








5.Design a soft-drink/snacks vending machine.

Consumer:
Data:name, address, phone number, money
Behaviors: chooseProducts, pay, eatOrDrinkProducts

Machine:
Data:types of products
Behaviors: giveProducts, transactionConfirmation

Products:
Data: name, type, price

Consumer qitarah,
Product snack,

If vendingMachine.isAvailable
  Qitarah.chooseProducts
If Products.isAvailable
  Qitarah.pay->name, creditCard, products, machine: transactionConfirmation
  Response=transactionConfirmation
Qitarah.getProduct
else
 Qitarah.chooseAnotherProduct
Else
  Machine.outOfService
Qitarah.chooseAnotherMachine